{"version":3,"sources":["components/SideNav.js","components/Nav.js","components/DetailsOverlay.js","components/Map.js","components/Filters.js","components/Snackbar.js","components/ResultsList.js","components/ResultsListContainer.js","components/Search.js","components/Favourites.js","components/App.js","serviceWorker.js","constants/ActionTypes.js","reducers/courts.js","reducers/formFilters.js","reducers/rootReducer.js","index.js"],"names":["TemporaryDrawer","state","top","left","bottom","right","toggleDrawer","side","open","_this","setState","Object","defineProperty","classes","this","props","sideList","react_default","a","createElement","className","list","List_default","ListItem_default","button","component","Link","to","ListItemIcon_default","index_es","ListItemText_default","primary","react","menuButton","color","aria-label","onClick","Menu_default","Drawer_default","onClose","tabIndex","role","onKeyDown","React","Component","connect","courts","activeCourt","filteredCourts","withStyles","width","fullList","marginLeft","marginRight","root","flexGrow","grow","AppBar_default","position","Toolbar_default","SideNav","Typography_default","variant","Button_default","href","card","minWidth","maxWidth","zIndex","panelLink","dispatch","setActiveCourt","court","type","addCourts","courtSurfaces","courtLatLon","courtUrl","panToCourtPosition","console","log","properties","surfaces","geometry","coordinates","Fragment","Card_default","style","CardContent_default","Grid_default","container","spacing","direction","alignItems","justify","item","gutterBottom","name","numOfCourts","description","CardActions_default","Icon_default","Map","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","window","location","componentDidMount","map","L","setView","tileLayer","attribution","maxZoom","addTo","navigator","geolocation","getCurrentPosition","x","addMarkers","customTennisIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","length","marker","forEach","courtObj","addEventListener","test","historyState","history","pushState","id","components_DetailsOverlay","ranges","value","label","Filters","courtCost","courtDistance","handleChange","event","target","updateFilters","handleDistanceChange","prop","calculateDistance","lat1","lon1","lat2","lon2","unit","radlat1","Math","PI","radlat2","theta","radtheta","dist","sin","cos","acos","applyFilters","_this$props","setUserLocation","fetch","headers","Content-Type","Accept","then","response","json","newCourtsList","filter","isMatch","freeAccess","coords","latitude","longitude","distanceToUser","withinRange","sort","courtA","courtB","parseFloat","slice","filterCourts","catch","error","alert","localStorage","setItem","FormControl_default","formControl","FormLabel_default","RadioGroup_default","group","onChange","FormControlLabel_default","control","Radio_default","TextField_default","select","padBottom","InputProps","startAdornment","InputAdornment_default","option","MenuItem_default","key","fullWidth","formFilters","filterValues","payload","theme","display","margin","concat","marginBottom","SimpleSnackbar","handleClick","handleClose","reason","addToFavourites","courtToAdd","favouriteCourts","getItem","JSON","parse","push","deDupedFavourites","elem","index","self","findIndex","courtX","stringify","_this2","size","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","message","action","IconButton_default","close","Close_default","padding","media","height","panel","courtsList","xs","sm","lg","CardActionArea_default","CardMedia_default","image","title","toFixed","substring","components_Snackbar","ResultsListContainer","components_ResultsList","Search","components_Filters","components_ResultsListContainer","Favourites","removeFavourite","editedFavourites","results","favourite","secondary","ListItemSecondaryAction_default","clearBtn","titleFavourites","marginTop","createMuiTheme","palette","main","typography","useNextVariants","App","showCourtDetails","BrowserRouter","styles","components_Nav","Route","exact","path","render","components_Map","Boolean","hostname","match","ActionTypes","GET_ACTIVE_COURT","SET_ACTIVE_COURT","ADD_COURTS","FILTER_COURTS","UPDATE_FILTERS","SET_USER_LOCATION","initialState","userLocation","rootReducer","combineReducers","arguments","undefined","objectSpread","store","createStore","applyMiddleware","thunk","getState","ReactDOM","es","components_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"ucA+BMA,6MACJC,MAAQ,CACNC,KAAK,EACLC,MAAM,EACNC,QAAQ,EACRC,OAAO,KAITC,aAAe,SAACC,EAAMC,GAAP,OAAgB,WAC7BC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGJ,EAAOC,8EAIH,IACCK,EAAYC,KAAKC,MAAjBF,QAEFG,EACJC,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQQ,MACtBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACID,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,UAAWC,IAAMC,GAAG,KACnCV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAcD,EAAAC,EAAAC,cAACU,EAAA,EAAD,gBACdZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAca,QAAQ,kBAExBd,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUM,QAAM,EAACC,UAAWC,IAAMC,GAAG,eACnCV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAcD,EAAAC,EAAAC,cAACU,EAAA,EAAD,kBACdZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAca,QAAQ,kBAUhC,OACEd,EAAAC,EAAAC,cAACa,EAAA,SAAD,KACEf,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYT,UAAWP,EAAQoB,WAAYC,MAAM,UAAUC,aAAW,OAAOC,QAAStB,KAAKR,aAAa,QAAQ,IAC5GW,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,OAGJD,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CAAQV,KAAMM,KAAKb,MAAME,KAAMoC,QAASzB,KAAKR,aAAa,QAAQ,IAChEW,EAAAC,EAAAC,cAAA,OACEqB,SAAU,EACVC,KAAK,SACLL,QAAStB,KAAKR,aAAa,QAAQ,GACnCoC,UAAW5B,KAAKR,aAAa,QAAQ,IAEpCU,YAlDiB2B,IAAMC,WAuErBC,cARS,SAAC5C,GACvB,MAAO,CACH6C,OAAQ7C,EAAM6C,OACdC,YAAa9C,EAAM6C,OAAOC,YAC1BC,eAAgB/C,EAAM6C,OAAOE,iBAIpBH,CAAyBI,qBApFzB,CACb5B,KAAM,CACJ6B,MAAO,KAETC,SAAU,CACRD,MAAO,QAETjB,WAAY,CACVmB,YAAa,GACbC,YAAa,KA2EuBJ,CAAmBjD,ICxD5CiD,2BAnCA,CACbK,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZtB,WAAY,CACVmB,YAAa,GACbC,YAAa,KA0BFJ,CAtBf,SAAalC,GAAO,IACVF,EAAYE,EAAZF,QACR,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQyC,MACtBrC,EAAAC,EAAAC,cAACsC,EAAAvC,EAAD,CAAQwC,SAAS,UACfzC,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,KACED,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY4C,QAAQ,KAAK5B,MAAM,UAAUd,UAAWP,EAAQ2C,MAA5D,4BAGAvC,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQgB,MAAM,UAAU8B,KAAK,yDAA7B,oJCrBJC,GAAO,CACTC,SAAU,QACVC,SAAU,QACVT,SAAU,WACVU,OAAQ,IACRhE,OAAQ,OACRD,KAAM,OAGJkE,GAAY,CACdnC,MAAO,WA4EX,IAceW,eAdS,SAAC5C,GACrB,MAAO,CACH6C,OAAQ7C,EAAM6C,OACdC,YAAa9C,EAAM8C,cAIA,SAACuB,GACxB,MAAO,CACHC,eAAgB,SAACC,GAAYF,EAAS,CAACG,KAAM,mBAAoBD,MAAOA,KACxEE,UAAW,SAAC5B,GAAawB,EAAS,CAACG,KAAM,aAAc3B,OAAQA,OAIxDD,CAvFf,SAAwB9B,GAAO,IAIvB4D,EACAC,EACAC,EALG/B,EAAU/B,EAAV+B,OACAgC,EAAsB/D,EAAtB+D,mBAYT,OAXEC,QAAQC,IAAIlC,EAAOC,aAIO,MAAtBD,EAAOC,cACPgC,QAAQC,IAAIlC,EAAOC,YAAYkC,WAAWC,UAC1CP,EAAgB7B,EAAOC,YAAYkC,WAAWC,SAAS,GAEvDL,EAAW,sCADXD,EAAc9B,EAAOC,YAAYoC,SAASC,aACoB,GAAK,IAAMR,EAAY,GAAK,YAI5F3D,EAAAC,EAAAC,cAACF,EAAAC,EAAMmE,SAAP,KACIpE,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAMqE,MAAOtB,IACXhD,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,KACID,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACAwE,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,aACXC,QAAQ,UAEJ7E,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,GACN9E,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYiC,QAAQ,KAAK5B,MAAM,gBAAgB8D,cAAY,GAChC,MAAtBlD,EAAOC,YAAsBgC,QAAQC,IAAIlC,EAAOC,YAAYkC,WAAWgB,MAAQlB,QAAQC,IAAI,WACrE,MAAtBlC,EAAOC,YAAsBD,EAAOC,YAAYkC,WAAWgB,KAAO,oBAK/EhF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACAwE,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,WAAW,SACXC,QAAQ,cAEJ7E,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,GACN9E,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYK,MAAM,gBAAgB8D,cAAY,GACnB,MAAtBlD,EAAOC,YAAsB,qBAAuBD,EAAOC,YAAYkC,WAAWiB,YAAc,KAGzGjF,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,GACN9E,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYK,MAAM,gBAAgB8D,cAAY,GACnB,MAAtBlD,EAAOC,YAAsB,eAAiB4B,EAAgB,MAK3E1D,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYK,MAAM,gBAAgB8D,cAAY,GACnB,MAAtBlD,EAAOC,YAAsBD,EAAOC,YAAYkC,WAAWkB,YAAc,KAGlFlF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,KAEID,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ4C,QAAQ,YAAY5B,MAAM,UAAU8B,KAAMa,EAAUU,MAAOlB,IAC/DpD,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYiC,QAAQ,SAAS5B,MAAM,WAAnC,kBAGAjB,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,uBAEJD,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ4C,QAAQ,YAAY5B,MAAM,YAAYE,QAAS0C,GACnD7D,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CAAMkB,QAAS0C,GAAf,4BCtFdwB,eACF,SAAAA,EAAYvF,GAAM,IAAAN,EAAA,OAAAE,OAAA4F,EAAA,EAAA5F,CAAAG,KAAAwF,IACd7F,EAAAE,OAAA6F,EAAA,EAAA7F,CAAAG,KAAAH,OAAA8F,EAAA,EAAA9F,CAAA2F,GAAAI,KAAA5F,KAAMC,KAOV4F,mBAAqB,WACa,MAA1BlG,EAAKM,MAAMgC,cACX6D,OAAOC,SAAS7C,KAAO,MAVbvD,EAclBqG,kBAAoB,WAShBrG,EAAKC,SAAS,CACVqG,IAAKC,IAAED,IAAI,OAAOE,QAAQ,CAAC,WAAY,UAAW,KACnD,WACCD,IAAEE,UAAU,+DAAgE,CACxEC,YAAa,2LACbC,QAAS,KACVC,MAAM5G,EAAKR,MAAM8G,KACU,MAA1BtG,EAAKM,MAAMgC,aACXtC,EAAKR,MAAM8G,IAAIE,QAAQxG,EAAKM,MAAMgC,YAAYoC,SAASC,eAG/DkC,UAAUC,YAAYC,mBAAmB,SAACC,GACtC1C,QAAQC,IAAIyC,IApBC,WACb1C,QAAQC,IAAI,8BAhBFvE,EA+ClBiH,WAAa,WACT,IAAIC,EAAmBX,IAAEY,KAAK,CAC1BC,QAAS,+BAETC,SAAc,CAAC,GAAI,IACnBC,WAAc,CAAC,GAAI,IACnBC,YAAc,EAAE,GAAI,MAGrBvH,EAAKM,MAAMiC,eAAeiF,OAAS,GAA+B,MAA1BxH,EAAKM,MAAMgC,aAClDiE,IAAEkB,OAAOzH,EAAKM,MAAMgC,YAAYoC,SAASC,YAAa,CAACwC,KAAMD,IAAmBN,MAAM5G,EAAKR,MAAM8G,KAGrGtG,EAAKM,MAAMiC,eAAemF,QAAQ,SAAA3D,GAC9B,IAAI4D,EACJA,EAAW5D,EAEEwC,IAAEkB,OAAO1D,EAAMW,SAASC,YAAa,CAACwC,KAAMD,IAAmBN,MAAM5G,EAAKR,MAAM8G,KACtFsB,iBAAiB,QAAS,SAAC7D,GAAW/D,EAAKM,MAAMwD,eAAe6D,KAAY,MAjEzE3H,EAqElBqE,mBAAqB,WACa,MAA1BrE,EAAKM,MAAMgC,aACXtC,EAAKR,MAAM8G,IAAIE,QAAQxG,EAAKM,MAAMgC,YAAYoC,SAASC,cApE3D3E,EAAKR,MAAQ,CACTqI,KAAM,MAJI7H,oFAwCdK,KAAK4G,aAEL,IAAIa,EAAe,CAACxF,YAAajC,KAAKC,MAAMgC,aAC5C6D,OAAO4B,QAAQC,UAAUF,EAAc,KAAM,yCAmC7C,OAHAxD,QAAQC,IAAIlE,KAAKC,OACjBgE,QAAQC,IAAIlE,KAAKC,MAAMgC,aACvBgC,QAAQC,IAAI4B,OAAO4B,QAAQvI,OAEvBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKuH,GAAG,OACJzH,EAAAC,EAAAC,cAACwH,GAAD,CAAgB7D,mBAAoBhE,KAAKgE,mBAAoBN,MAAO1D,KAAKb,MAAM8C,uBAlFjFJ,IAAMC,WAyGTC,eAhBS,SAAC5C,GACrB,MAAO,CACH6C,OAAQ7C,EAAM6C,OAAOA,OACrBC,YAAa9C,EAAM6C,OAAOC,YAC1BC,eAAgB/C,EAAM6C,OAAOE,iBAIV,SAACsB,GACxB,MAAO,CACHC,eAAgB,SAACC,GAAYF,EAAS,CAACG,KAAM,mBAAoBD,MAAOA,KACxEE,UAAW,SAAC5B,GAAawB,EAAS,CAACG,KAAM,aAAc3B,OAAQA,OAKxDD,CAA6CyD,oKCvEtDsC,GAAS,CACX,CACEC,MAAO,EACPC,MAAO,OAET,CACED,MAAO,GACPC,MAAO,QAET,CACED,MAAO,GACPC,MAAO,QAET,CACED,MAAO,GACPC,MAAO,QAET,CACED,MAAO,IACPC,MAAO,QAIPC,8MACJ9I,MAAQ,CACN+I,UAAW,OACXC,cAAe,OAGjBC,aAAe,SAAAC,GACb1I,EAAKC,SAAS,CAAEsI,UAAWG,EAAMC,OAAOP,OAAS,WAE/CpI,EAAKM,MAAMsI,cAAc5I,EAAKR,YAMlCqJ,qBAAuB,SAAAC,GAAI,OAAI,SAAAJ,GAC7B1I,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GAAiB4I,EAAOJ,EAAMC,OAAOP,OAAS,WAE5CpI,EAAKM,MAAMsI,cAAc5I,EAAKR,aAMlCuJ,kBAAoB,SAACC,EAAMC,EAAMC,EAAMC,EAAMC,GAC3C,GAAKJ,IAASE,GAAUD,IAASE,EAC/B,OAAO,EAGP,IAAIE,EAAUC,KAAKC,GAAKP,EAAK,IACzBQ,EAAUF,KAAKC,GAAKL,EAAK,IACzBO,EAAQR,EAAKE,EACbO,EAAWJ,KAAKC,GAAKE,EAAM,IAC3BE,EAAOL,KAAKM,IAAIP,GAAWC,KAAKM,IAAIJ,GAAWF,KAAKO,IAAIR,GAAWC,KAAKO,IAAIL,GAAWF,KAAKO,IAAIH,GASpG,OARIC,EAAO,IACTA,EAAO,GAITA,EAAc,IADdA,EAAc,KADdA,EAAOL,KAAKQ,KAAKH,IACCL,KAAKC,IACJ,OACR,MAAPH,IAAcO,GAAc,UACrB,MAAPP,IAAcO,GAAc,OACzBA,KAIXI,aAAe,WAAM,IAAAC,EACchK,EAAKM,MAAjCiI,EADcyB,EACdzB,UAAWC,EADGwB,EACHxB,cAShB3B,UAAUC,YAAYC,mBAAmB,SAACC,GAGxChH,EAAKM,MAAM2J,gBAAgBjD,GAC3B1C,QAAQC,IAAIyC,GACZkD,MAAM,uBAAwB,CAC5BC,QAAS,CACPC,eAAgB,mBAChBC,OAAU,sBAGbC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAEJlG,QAAQC,IAAIiG,GACZxK,EAAKM,MAAM2D,UAAUuG,GAErB,IAAIC,EAAgB,IAEpBA,EAAgBD,EAAKE,OAAO,SAAA3G,GAC1B,IAAI4G,GAAU,EAcd,OAboC,IAAhC5G,EAAMS,WAAWoG,YAAqC,SAAdrC,IAC1CoC,GAAU,IAEyB,IAAjC5G,EAAMS,WAAWoG,YAAuC,YAAdrC,IAC5CoC,GAAU,IAEyB,IAAjC5G,EAAMS,WAAWoG,YAAuC,QAAdrC,IAC5CoC,GAAU,IAEyB,IAAjC5G,EAAMS,WAAWoG,YAAsC,QAAdrC,IAC3CoC,GAAU,IAGO,IAAZA,KAGKrE,IAAI,SAAAvC,GAUhB,OATAO,QAAQC,IAAIyC,EAAE6D,OAAOC,UACrBxG,QAAQC,IAAIyC,EAAE6D,OAAOE,WACrBzG,QAAQC,IAAIR,EAAMiH,eAAiBhL,EAAK+I,kBACtC/B,EAAE6D,OAAOC,SACT9D,EAAE6D,OAAOE,UACThH,EAAMW,SAASC,YAAY,GAC3BZ,EAAMW,SAASC,YAAY,KAGtBZ,KAGT0G,EAAgBA,EAAcC,OAAO,SAAA3G,GACnC,IAAIkH,GAAc,EAMlB,OAJGlH,EAAMiH,gBAAkBxC,IACzByC,GAAc,IAGO,IAAhBA,KAGKC,KAAK,SAACC,EAAQC,GAAT,OAAoBC,WAAWF,EAAOH,gBAAkBK,WAAWD,EAAOJ,kBAE7F1G,QAAQC,IAAI,mBACZD,QAAQC,IAAIkG,GAGTA,EAAcjD,OAAS,KACxBiD,EAAgBA,EAAca,MAAM,EAAE,KAGxCtL,EAAKM,MAAMiL,aAAad,KAEzBe,MAAM,SAAAC,GAAK,OAAInH,QAAQmH,MAAMA,MA9Ef,WACfnH,QAAQC,IAAI,2BACZmH,MAAM,iCAsFVrF,kBAAoB,WAClBsF,aAAaC,QAAQ,OAAQ,iFAGtB,IACCxL,EAAYC,KAAKC,MAAjBF,QAGR,OACMI,EAAAC,EAAAC,cAAA,OAAKC,UAAWP,EAAQyC,MACxBrC,EAAAC,EAAAC,cAACmL,GAAApL,EAAD,CAAaO,UAAU,WAAWL,UAAWP,EAAQ0L,aACnDtL,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,CAAWO,UAAU,UAArB,cACAR,EAAAC,EAAAC,cAACsL,GAAAvL,EAAD,CACEiB,aAAW,aACX8D,KAAK,aACL7E,UAAWP,EAAQ6L,MACnB7D,MAAO/H,KAAKC,MAAMiI,UAClB2D,SAAU7L,KAAKoI,cAEfjI,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,CAAkB2H,MAAM,OAAOgE,QAAS5L,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,MAAW4H,MAAM,gBACzD7H,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,CAAkB2H,MAAM,UAAUgE,QAAS5L,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,MAAW4H,MAAM,mBAC5D7H,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,CAAkB2H,MAAM,MAAMgE,QAAS5L,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,MAAW4H,MAAM,SAE1D7H,EAAAC,EAAAC,cAAC4L,GAAA7L,EAAD,CACI8L,QAAM,EAEN5L,UAAWP,EAAQoM,UACnBnJ,QAAQ,WACRgF,MAAM,WACND,MAAO/H,KAAKC,MAAMkI,cAClB0D,SAAU7L,KAAKwI,qBAAqB,iBACpC4D,WAAY,CACZC,eAAgBlM,EAAAC,EAAAC,cAACiM,GAAAlM,EAAD,CAAgBwC,SAAS,SAAzB,WAGfkF,GAAO7B,IAAI,SAAAsG,GAAM,OAClBpM,EAAAC,EAAAC,cAACmM,GAAApM,EAAD,CAAUqM,IAAKF,EAAOxE,MAAOA,MAAOwE,EAAOxE,OACtCwE,EAAOvE,UAIhB7H,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ4C,QAAQ,YAAY5B,MAAM,UAAUsL,WAAS,EAACpL,QAAStB,KAAK0J,cAApE,0BAnLU7H,IAAMC,WAiNbC,eArBS,SAAC5C,GACvB,MAAO,CACH+I,UAAW/I,EAAMwN,YAAYzE,UAC7BC,cAAehJ,EAAMwN,YAAYxE,cACjCnG,OAAQ7C,EAAM6C,OAAOA,SAQA,SAACwB,GAC1B,MAAO,CACH+E,cAAe,SAACqE,GAAmBpJ,EAAS,CAACG,KAAM,iBAAkBkJ,QAASD,KAC9EhJ,UAAW,SAAC5B,GAAawB,EAAS,CAACG,KAAM,aAAc3B,OAAQA,KAC/DkJ,aAAc,SAAChJ,GAAoBsB,EAAS,CAACG,KAAM,gBAAiBkJ,QAAS3K,KAC7E0H,gBAAiB,SAAC7D,GAAcvC,EAAS,CAACG,KAAM,oBAAqBkJ,QAAS9G,OAIrEhE,CAA6CI,qBAvP7C,SAAA2K,GAAK,MAAK,CACvBtK,KAAM,CACJuK,QAAS,QAEXtB,YAAa,CACXuB,OAA6B,EAArBF,EAAMjI,QAAQkE,MAExB6C,MAAO,CACLoB,OAAM,GAAAC,OAAKH,EAAMjI,QAAQkE,KAAnB,SAERoD,UAAW,CACTe,aAAc,SA4O0C/K,CAAmB8F,0GCjQzEkF,8MACJhO,MAAQ,CACNO,MAAM,KAGR0N,YAAc,WACZzN,EAAKC,SAAS,CAAEF,MAAM,OAGxB2N,YAAc,SAAChF,EAAOiF,GACL,cAAXA,GAIJ3N,EAAKC,SAAS,CAAEF,MAAM,OAGxB6N,gBAAkB,SAACC,GACjB,IAAIC,EAAkB,GACnBnC,aAAaoC,QAAQ,qBACtBD,EAAkBE,KAAKC,MAAMtC,aAAaoC,QAAQ,oBAClDzJ,QAAQC,IAAIoH,aAAaoC,QAAQ,qBAKnCD,EAAgBI,KAAKL,GAErB,IAAIM,EAAoBL,EAAgBpD,OAAO,SAAC0D,EAAMC,EAAOC,GAAd,OAAuBA,EAAKC,UACzE,SAACC,GAAY,OAAQA,EAAOhK,WAAWyD,KAAOmG,EAAK5J,WAAWyD,IAAMuG,EAAOhK,WAAWyD,KAAOmG,EAAK5J,WAAWyD,OAAUoG,IAGzH1C,aAAaC,QAAQ,kBAAmBoC,KAAKS,UAAUN,IACvD7J,QAAQC,IAAIoH,aAAaoC,QAAQ,6FAG1B,IAAAW,EAAArO,KACCD,EAAYC,KAAKC,MAAjBF,QACR,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQkO,KAAK,QAAQlN,MAAM,UAAUE,QAAS,WAAO+M,EAAKd,gBAAgBc,EAAKpO,MAAMyD,OAAQ2K,EAAKjB,gBAAlG,aACAjN,EAAAC,EAAAC,cAACkO,GAAAnO,EAAD,CACEoO,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdhP,KAAMM,KAAKb,MAAMO,KACjBiP,iBAAkB,IAClBlN,QAASzB,KAAKqN,YACduB,aAAc,CACZC,mBAAoB,cAEtBC,QAAS3O,EAAAC,EAAAC,cAAA,QAAMuH,GAAG,cAAc5H,KAAKC,MAAMyD,MAAMS,WAAWgB,KAAnD,yBACT4J,OAAQ,CACN5O,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CACEqM,IAAI,QACJpL,aAAW,QACXD,MAAM,UACNd,UAAWP,EAAQkP,MACnB3N,QAAStB,KAAKqN,aAEdlN,EAAAC,EAAAC,cAAC6O,GAAA9O,EAAD,kBA7DeyB,IAAMC,WA0EpBK,wBAhFA,SAAA2K,GAAK,MAAK,CACvBmC,MAAO,CACLE,QAASrC,EAAMjI,QAAQkE,KAAO,KA8EnB5G,CAAmBgL,ICoDnBpL,eAjBS,SAAC5C,GAIrB,MAAO,CACH6C,OAAQ7C,EAAM6C,OACdE,eAAgB/C,EAAM6C,OAAOE,eAC7BD,YAAa9C,EAAM6C,OAAOC,cAIP,SAACuB,GACxB,MAAO,CACHC,eAAgB,SAACC,GAAYF,EAAS,CAACG,KAAM,mBAAoBD,MAAOA,OAIjE3B,CAA6CI,qBAvH7C,CACbgB,KAAM,CACJE,SAAU,IACV2J,OAAQ,OACRE,aAAc,QAEhBkC,MAAO,CACLC,OAAQ,KAEVC,MAAO,CACLD,OAAQ,MA6GgDlN,CApFxC,SAAClC,GAAU,IAOzBsP,EANIxP,EAAYE,EAAZF,QACJiC,EAAS/B,EAAMiC,eAgDnB,OA7CA+B,QAAQC,IAAIjE,GAKVsP,EADCvN,EAAOmF,OAAS,EACJhH,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAYO,UAAU,KAAtB,8DAEAqB,EAAOiE,IAAI,SAAAvC,GAEtB,OADAO,QAAQC,IAAIjE,EAAMwD,gBAEhBtD,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,EAACuK,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGjD,IAAK/I,EAAMS,WAAWyD,IACrDzH,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAME,UAAWP,EAAQoD,MACvBhD,EAAAC,EAAAC,cAACsP,GAAAvP,EAAD,KACED,EAAAC,EAAAC,cAACuP,GAAAxP,EAAD,CACEE,UAAWP,EAAQqP,MACnBS,MAAO,mBAAoBnM,EAAMS,WAAWyD,GAAK,OACjDkI,MAAM,UAER3P,EAAAC,EAAAC,cAACqE,EAAAtE,EAAD,CAAaE,UAAWP,EAAQuP,OAC9BnP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY8E,cAAY,EAAClC,QAAQ,KAAKrC,UAAU,MAC7C+C,EAAMS,WAAWgB,MAEpBhF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY8E,cAAY,EAACvE,UAAU,KAChC+C,EAAMiH,eAAeoF,QAAQ,GADhC,eAGA5P,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY8E,cAAY,EAACvE,UAAU,KAChC+C,EAAMS,WAAWkB,YAAY2K,UAAU,EAAE,KAD5C,OAGA7P,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY8E,cAAY,EAACvE,UAAU,KAAnC,sBACsB+C,EAAMS,WAAWiB,eAI3CjF,EAAAC,EAAAC,cAACiF,EAAAlF,EAAD,KACED,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQkO,KAAK,QAAQlN,MAAM,UAAUT,UAAWC,IAAMC,GAAG,OAAOS,QAAS,WAAOrB,EAAMwD,eAAeC,KAArG,eAGAvD,EAAAC,EAAAC,cAAC4P,GAAD,CAAUvM,MAAOA,SAS3BvD,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACEwE,WAAS,EACTC,QAAS,EACTC,UAAU,MACVC,WAAW,SACXC,QAAQ,UAEPuK,MC7GDW,oLAEF,OACE/P,EAAAC,EAAAC,cAAC8P,GAAD,aAH6BrO,aAuBpBC,eAfS,SAAC5C,GACvB,MAAO,CACH6C,OAAQ7C,EAAM6C,OACdC,YAAa9C,EAAM8C,YACnBC,eAAgB/C,EAAM6C,OAAOE,iBAIR,SAACsB,GAC1B,MAAO,CACHC,eAAgB,SAACC,GAAYF,EAAS,CAACG,KAAM,mBAAoBD,MAAOA,KACxEE,UAAW,SAAC5B,GAAawB,EAAS,CAACG,KAAM,aAAckJ,QAAS7K,OAIvDD,CAA6CmO,ICO7CE,oLA5BX,OACEjQ,EAAAC,EAAAC,cAACa,EAAA,SAAD,KACEf,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACEwE,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER7E,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,EAACuK,GAAI,IACbrP,EAAAC,EAAAC,cAACgQ,GAAD,QAGJlQ,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACAwE,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,UAEN7E,EAAAC,EAAAC,cAACiQ,GAAD,eAtBWxO,iCC4BfyO,eACF,SAAAA,EAAYtQ,GAAM,IAAAN,EAAA,OAAAE,OAAA4F,EAAA,EAAA5F,CAAAG,KAAAuQ,IACd5Q,EAAAE,OAAA6F,EAAA,EAAA7F,CAAAG,KAAAH,OAAA8F,EAAA,EAAA9F,CAAA0Q,GAAA3K,KAAA5F,KAAMC,KAQVuQ,gBAAkB,SAAC5I,GAEf,IACI6I,EADa9Q,EAAKR,MAAMsO,gBACMpD,OAAO,SAAC3G,GACtC,OAAQA,EAAMS,WAAWyD,KAAOA,IAEpCjI,EAAKC,SAAS,CAAC6N,gBAAiBgD,IAChCnF,aAAaC,QAAQ,kBAAkBoC,KAAKS,UAAUqC,KAbtD9Q,EAAKR,MAAQ,CACTsO,gBAAiBE,KAAKC,MAAMtC,aAAaoC,QAAQ,qBAJvC/N,wEAmBX,IAEH+Q,EAFGrC,EAAArO,KACCD,EAAYC,KAAKC,MAAjBF,QAKJ0N,EAAkBzN,KAAKb,MAAMsO,gBAyBjC,OAvBuB,MAAnBA,IACAiD,EAAUjD,EAAgBxH,IAAI,SAAA0K,GAC1B,OACQxQ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUqM,IAAKkE,EAAUxM,WAAWyD,IAEhCzH,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACIa,QAAS0P,EAAUxM,WAAWgB,KAC9ByL,UAAW,kBAAoBD,EAAUxM,WAAWiB,cAExDjF,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQkO,KAAK,QAAQlN,MAAM,UAAUT,UAAWC,IAAMC,GAAG,OAAOS,QAAS,WAAO+M,EAAKpO,MAAMwD,eAAekN,KAA1G,eAGAxQ,EAAAC,EAAAC,cAACwQ,GAAAzQ,EAAD,CAAyBE,UAAWP,EAAQ+Q,UACxC3Q,EAAAC,EAAAC,cAAC2O,GAAA5O,EAAD,CAAYiB,aAAW,SAASC,QAAS,WAAO+M,EAAKmC,gBAAgBG,EAAUxM,WAAWyD,MACtFzH,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KAAcD,EAAAC,EAAAC,cAACU,EAAA,EAAD,qBAUxCZ,EAAAC,EAAAC,cAACa,EAAA,SAAD,KACEf,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CACEwE,WAAS,EACTC,QAAS,EACTC,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER7E,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,EAACuK,GAAI,IACbrP,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CAAY4C,QAAQ,KAAK1C,UAAWP,EAAQgR,iBAA5C,eAIF5Q,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAAM6E,MAAI,GACR9E,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACKsQ,aAnEQ5O,aA+FVC,eAlBS,SAAC5C,GACrB,MAAO,CACH6C,OAAQ7C,EAAM6C,OACdE,eAAgB/C,EAAM6C,OAAOE,eAC7BD,YAAa9C,EAAM6C,OAAOC,cAQL,SAACuB,GAC1B,MAAO,CACHC,eAAgB,SAACC,GAAYF,EAAS,CAACG,KAAM,mBAAoBD,MAAOA,OAIjE3B,CAA6CI,qBAzG7C,CACX2O,SAAU,CACNlO,SAAU,WACVrD,MAAO,SAEXwR,gBAAiB,CACbC,UAAW,SAmGyC7O,CAAmBoO,KCtHzEzD,GAAQmE,yBAAe,CAC3BC,QAAS,CACPjQ,QAAS,CAAEkQ,KAAM,WACjBP,UAAW,CAAEO,KAAM,YAErBC,WAAY,CAAEC,iBAAiB,KAmClBC,eA/Bb,SAAAA,EAAYrR,GAAO,IAAAN,EAAA,OAAAE,OAAA4F,EAAA,EAAA5F,CAAAG,KAAAsR,IACjB3R,EAAAE,OAAA6F,EAAA,EAAA7F,CAAAG,KAAAH,OAAA8F,EAAA,EAAA9F,CAAAyR,GAAA1L,KAAA5F,KAAMC,KAEDd,MAAQ,CACXoS,kBAAkB,GAJH5R,sHAajB,OACEQ,EAAAC,EAAAC,cAACmR,EAAA,EAAD,KACErR,EAAAC,EAAAC,cAACoR,EAAA,iBAAD,CAAkB3E,MAAOA,IACvB3M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqR,EAAD,MACAvR,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIlR,UAAWyP,KACjCjQ,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CACEC,OAAK,EAACC,KAAK,OACXC,OAAQ,SAAC7R,GAAD,OAAWE,EAAAC,EAAAC,cAAC0R,GAAD,SAErB5R,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAclR,UAAW4P,eAxBrCzO,aCNEkQ,QACW,cAA7BlM,OAAOC,SAASkM,UAEe,UAA7BnM,OAAOC,SAASkM,UAEhBnM,OAAOC,SAASkM,SAASC,MACvB,iFCNSC,GAZK,CAChBC,iBAAkB,mBAClBC,iBAAkB,mBAElBC,WAAY,aACZC,cAAe,gBAEfC,eAAgB,iBAEhBC,kBAAmB,qBCPjBC,GAAe,CACjB1Q,OAAQ,GACRE,eAAgB,GAChBD,YAAa,KACb0Q,aAAc,ICJlB,IAAMD,GAAe,CACjBxK,UAAW,OACXC,cAAe,KCAnB,IAKeyK,GALKC,aAAgB,CAChC7Q,OFIW,WAA8C,IAA9B7C,EAA8B2T,UAAA3L,OAAA,QAAA4L,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAc3D,EAAQ+D,UAAA3L,OAAA,EAAA2L,UAAA,QAAAC,EACzD,OAAQhE,EAAOpL,MACb,KAAKwO,GAAYG,WAEf,OADArO,QAAQC,IAAI6K,GACLlP,OAAAmT,GAAA,EAAAnT,CAAA,GACFV,EADL,CAEI6C,OAAQ+M,EAAOlC,UAErB,KAAKsF,GAAYI,cACf,OAAO1S,OAAAmT,GAAA,EAAAnT,CAAA,GACFV,EADL,CAEE+C,eAAgB6M,EAAOlC,UAG3B,KAAKsF,GAAYE,iBAIf,OAFApO,QAAQC,IAAI6K,GACZ9K,QAAQC,IAAI6K,EAAOrL,OACZ7D,OAAAmT,GAAA,EAAAnT,CAAA,GACFV,EADL,CAEE8C,YAAa8M,EAAOrL,QAGxB,KAAKyO,GAAYM,kBAIf,OAFAxO,QAAQC,IAAI6K,EAAOlC,QAAQrC,OAAOC,UAClCxG,QAAQC,IAAI6K,EAAOlC,QAAQrC,OAAOE,WAC3B7K,OAAAmT,GAAA,EAAAnT,CAAA,GACFV,EADL,CAEEwT,aAAc,CAAC5D,EAAOlC,QAAQrC,OAAOC,SAAUsE,EAAOlC,QAAQrC,OAAOE,aAEzE,QACE,OAAOvL,IEnCXwN,YDCW,WAA8C,IAA9BxN,EAA8B2T,UAAA3L,OAAA,QAAA4L,IAAAD,UAAA,GAAAA,UAAA,GAAtBJ,GAAc3D,EAAQ+D,UAAA3L,OAAA,EAAA2L,UAAA,QAAAC,EACzD,OAAQhE,EAAOpL,MACb,KAAKwO,GAAYK,eAEf,OAAO3S,OAAAmT,GAAA,EAAAnT,CAAA,GACFV,EACA4P,EAAOlC,SAEd,QACE,OAAO1N,gBEHT8T,GAAQC,aAAYN,GAAaO,aAAgBC,OACvDnP,QAAQC,IAAI+O,GAAMI,YAElBC,IAASxB,OAAO3R,EAAAC,EAAAC,cAACkT,EAAA,EAAD,CAAUN,MAAOA,IAAO9S,EAAAC,EAAAC,cAACmT,GAAD,OAAoBC,SAASC,eAAe,SLiH9E,kBAAmBlN,WACrBA,UAAUmN,cAAcC,MAAM3J,KAAK,SAAA4J,GACjCA,EAAaC","file":"static/js/main.1ec5f020.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\n// import Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\n// import Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { Icon, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n// Store\r\nimport {connect} from 'react-redux';\r\n\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  }\r\n};\r\n\r\nclass TemporaryDrawer extends React.Component {\r\n  state = {\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n\r\n  };\r\n\r\n  toggleDrawer = (side, open) => () => {\r\n    this.setState({\r\n      [side]: open,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    const sideList = (\r\n      <div className={classes.list}>\r\n        <List>\r\n            <ListItem button component={Link} to=\"/\">\r\n              <ListItemIcon><Icon>search</Icon></ListItemIcon>\r\n              <ListItemText primary=\"Court Search\" />\r\n            </ListItem>\r\n            <ListItem button component={Link} to=\"/favourites\">\r\n              <ListItemIcon><Icon>favorite</Icon></ListItemIcon>\r\n              <ListItemText primary=\"Favourites\" />\r\n            </ListItem>\r\n            {/* <ListItem button component={Link} to=\"./map\" disabled={this.props.activeCourt === null}>\r\n              <ListItemIcon><Icon>place</Icon></ListItemIcon>\r\n              <ListItemText primary=\"Map View\"></ListItemText>\r\n            </ListItem> */}\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.toggleDrawer('left', true)}>\r\n            <MenuIcon/>\r\n        </IconButton>\r\n        \r\n        <Drawer open={this.state.left} onClose={this.toggleDrawer('left', false)}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            onClick={this.toggleDrawer('left', false)}\r\n            onKeyDown={this.toggleDrawer('left', false)}\r\n          >\r\n            {sideList}\r\n          </div>\r\n        </Drawer>\r\n      </Fragment>\r\n          \r\n    );\r\n  }\r\n}\r\n\r\nTemporaryDrawer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      courts: state.courts,\r\n      activeCourt: state.courts.activeCourt,\r\n      filteredCourts: state.courts.filteredCourts\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(TemporaryDrawer));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\nimport SideNav from './SideNav';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction Nav(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <SideNav/>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n            Find Local Tennis Courts\r\n          </Typography>\r\n          <Button color=\"inherit\" href=\"http://github.com/reaiiybigshrimp/tennis_court_finder\">Source Code(GitHub)</Button>\r\n        </Toolbar>\r\n        \r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nNav.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Nav);","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Typography } from '@material-ui/core';\r\n// import blueGrey from '@material-ui/core/colors/blueGrey';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nconst card = {\r\n    minWidth: '350px',\r\n    maxWidth: '400px',\r\n    position: 'absolute',\r\n    zIndex: 500,\r\n    bottom: '25px',\r\n    left: '1px'\r\n}\r\n\r\nconst panelLink = {\r\n    color: '#ffffff'\r\n}\r\n\r\nfunction DetailsOverlay(props) {\r\n    const {courts} = props;\r\n    const {panToCourtPosition} = props;\r\n    console.log(courts.activeCourt);\r\n    let courtSurfaces;\r\n    let courtLatLon;\r\n    let courtUrl;\r\n    if (courts.activeCourt != null) {\r\n        console.log(courts.activeCourt.properties.surfaces);\r\n        courtSurfaces = courts.activeCourt.properties.surfaces[0];\r\n        courtLatLon = courts.activeCourt.geometry.coordinates;\r\n        courtUrl = 'http://maps.google.com/maps?daddr=' + courtLatLon[0] + ',' + courtLatLon[1] + '&amp;ll=';\r\n    }\r\n\r\n  return (\r\n      <React.Fragment>\r\n          <Card style={card}>\r\n            <CardContent>\r\n                <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"flex-start\"\r\n                justify=\"center\"\r\n                >\r\n                    <Grid item>\r\n                        <Typography variant=\"h4\" color=\"textSecondary\" gutterBottom>\r\n                            {courts.activeCourt != null ? console.log(courts.activeCourt.properties.name) : console.log(\"Nothing\")}\r\n                            {courts.activeCourt != null ? courts.activeCourt.properties.name : 'Select a court'}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid\r\n                container\r\n                spacing={8}\r\n                direction=\"row\"\r\n                alignItems=\"center\"\r\n                justify=\"flex-start\"\r\n                >\r\n                    <Grid item>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            {courts.activeCourt != null ? \"Number of courts: \" + courts.activeCourt.properties.numOfCourts : ''}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Typography color=\"textSecondary\" gutterBottom>\r\n                            {courts.activeCourt != null ? \"Surface(s): \" + courtSurfaces : ''}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                    {courts.activeCourt != null ? courts.activeCourt.properties.description : ''}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n\r\n                <Button variant=\"contained\" color=\"primary\" href={courtUrl} style={panelLink}>\r\n                    <Typography variant=\"button\" color=\"inherit\">\r\n                        Get Directions\r\n                    </Typography>\r\n                    <Icon>chevron_right</Icon>\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={panToCourtPosition}>\r\n                    <Icon onClick={panToCourtPosition}>location_searching</Icon>\r\n                </Button>\r\n            </CardActions>\r\n          </Card>\r\n      </React.Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        courts: state.courts,\r\n        activeCourt: state.activeCourt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveCourt: (court) => { dispatch({type: 'SET_ACTIVE_COURT', court: court}) },\r\n        addCourts: (courts) => { dispatch({type: 'ADD_COURTS', courts: courts })}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DetailsOverlay);\r\n\r\n","import React from 'react';\r\nimport L from 'leaflet';\r\nimport DetailsOverlay from './DetailsOverlay';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Map extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            test: null\r\n        };\r\n    }\r\n\r\n    componentWillMount = () => {\r\n        if (this.props.activeCourt == null) {\r\n            window.location.href = '/'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let noLocation = () => {\r\n            console.log(\"No user location found.\");\r\n        }\r\n        /* if (this.props.activeCourt == null) {\r\n            window.location.href = '/';\r\n        } */\r\n        // TO CHANGE (get location)\r\n        // Remove hard coded location for production\r\n        this.setState({\r\n            map: L.map('map').setView([53.645792, -1.785035], 16)\r\n        }, () => {\r\n            L.tileLayer('https://{s}.tile.openstreetmap.se/hydda/full/{z}/{x}/{y}.png', {\r\n                attribution: 'Tiles courtesy of <a href=\"http://openstreetmap.se/\" target=\"_blank\">OpenStreetMap Sweden</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n                maxZoom: 18\r\n            }).addTo(this.state.map);\r\n            if (this.props.activeCourt != null) {\r\n                this.state.map.setView(this.props.activeCourt.geometry.coordinates);\r\n            }\r\n        });\r\n        navigator.geolocation.getCurrentPosition((x) => {\r\n            console.log(x);\r\n        }, noLocation);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.addMarkers();\r\n\r\n        let historyState = {activeCourt: this.props.activeCourt};\r\n        window.history.pushState(historyState, null, '/map');\r\n        \r\n    }\r\n\r\n    addMarkers = () => {\r\n        let customTennisIcon = L.icon({\r\n            iconUrl: '/images/tennis_marker_01.svg',\r\n        \r\n            iconSize:     [38, 51], // size of the icon\r\n            iconAnchor:   [15, 35], // point of the icon which will correspond to marker's location\r\n            popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\r\n        });\r\n\r\n        if(this.props.filteredCourts.length < 1 && this.props.activeCourt != null){\r\n            L.marker(this.props.activeCourt.geometry.coordinates, {icon: customTennisIcon}).addTo(this.state.map);\r\n        }\r\n\r\n        this.props.filteredCourts.forEach(court => {\r\n            let courtObj = {};\r\n            courtObj = court;\r\n\r\n            let marker = L.marker(court.geometry.coordinates, {icon: customTennisIcon}).addTo(this.state.map);\r\n            marker.addEventListener('click', (court) => {this.props.setActiveCourt(courtObj)}, false);\r\n        });\r\n    }\r\n    // Uses selected court's coordinates to pan to its marker on the map\r\n    panToCourtPosition = () => {\r\n        if (this.props.activeCourt != null) {\r\n            this.state.map.setView(this.props.activeCourt.geometry.coordinates);\r\n        }\r\n    }\r\n    render() {\r\n        console.log(this.props);\r\n        console.log(this.props.activeCourt);\r\n        console.log(window.history.state);\r\n        return (\r\n            <div className=\"map-container\">\r\n                <div id=\"map\">\r\n                    <DetailsOverlay panToCourtPosition={this.panToCourtPosition} court={this.state.activeCourt}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        courts: state.courts.courts,\r\n        activeCourt: state.courts.activeCourt,\r\n        filteredCourts: state.courts.filteredCourts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveCourt: (court) => { dispatch({type: 'SET_ACTIVE_COURT', court: court}) },\r\n        addCourts: (courts) => { dispatch({type: 'ADD_COURTS', courts: courts })}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\n// Submit button\r\n// import Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Dropdown menu filter\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n//Grid\r\n// import Grid from '@material-ui/core/Grid';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit * 3,\r\n  },\r\n  group: {\r\n    margin: `${theme.spacing.unit}px 0`,\r\n  },\r\n  padBottom: {\r\n    marginBottom: '5px'\r\n  }\r\n});\r\n\r\nconst ranges = [\r\n    {\r\n      value: 5,\r\n      label: '< 5',\r\n    },\r\n    {\r\n      value: 10,\r\n      label: '< 10',\r\n    },\r\n    {\r\n      value: 20,\r\n      label: '< 20',\r\n    },\r\n    {\r\n      value: 50,\r\n      label: '< 50'\r\n    },\r\n    {\r\n      value: 1000,\r\n      label: 'Any',\r\n    },\r\n  ];\r\n\r\nclass Filters extends React.Component {\r\n  state = {\r\n    courtCost: 'free',\r\n    courtDistance: 1000\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ courtCost: event.target.value }, () => {\r\n      //console.log(this.state.costValue);\r\n      this.props.updateFilters(this.state);\r\n\r\n    });\r\n    //this.props.updateFilters(this.state);\r\n  };\r\n\r\n  handleDistanceChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value }, () => {\r\n      //console.log(this.state.courtDistance);\r\n      this.props.updateFilters(this.state);\r\n    });\r\n  };\r\n\r\n  // Formula for calculating the distance between two points\r\n  // https://www.geodatasource.com/developers/javascript\r\n  calculateDistance = (lat1, lon1, lat2, lon2, unit) => {\r\n    if ((lat1 === lat2) && (lon1 === lon2)) {\r\n      return 0;\r\n    }\r\n    else {\r\n      var radlat1 = Math.PI * lat1/180;\r\n      var radlat2 = Math.PI * lat2/180;\r\n      var theta = lon1-lon2;\r\n      var radtheta = Math.PI * theta/180;\r\n      var dist = Math.sin(radlat1) * Math.sin(radlat2) + Math.cos(radlat1) * Math.cos(radlat2) * Math.cos(radtheta);\r\n      if (dist > 1) {\r\n        dist = 1;\r\n      }\r\n      dist = Math.acos(dist);\r\n      dist = dist * 180/Math.PI;\r\n      dist = dist * 60 * 1.1515;\r\n      if (unit===\"K\") { dist = dist * 1.609344 }\r\n      if (unit===\"N\") { dist = dist * 0.8684 }\r\n      return dist;\r\n    }\r\n  }\r\n\r\n  applyFilters = () => {\r\n    let {courtCost, courtDistance} = this.props;\r\n    \r\n    // Logs if no location is found\r\n    let noLocation = () => {\r\n      console.log(\"No user location found.\");\r\n      alert(\"Error: No location found\");\r\n    }\r\n\r\n    // Finds location then checks form filters for matching courts\r\n    navigator.geolocation.getCurrentPosition((x) => {\r\n      // Send location to Redux store via action\r\n      // action takes position object\r\n      this.props.setUserLocation(x);\r\n      console.log(x);\r\n      fetch('./tennis_courts.json', {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      })\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        // Adds court data to state\r\n        console.log(json);\r\n        this.props.addCourts(json);\r\n        \r\n        let newCourtsList = [];\r\n\r\n        newCourtsList = json.filter(court => {\r\n          let isMatch = false;\r\n          if (court.properties.freeAccess === true && courtCost === 'free') {\r\n            isMatch = true;\r\n          }\r\n          if (court.properties.freeAccess ===  false && courtCost === 'premium') {\r\n            isMatch = true;\r\n          }\r\n          if (court.properties.freeAccess ===  false && courtCost === 'all') {\r\n            isMatch = true;\r\n          }\r\n          if (court.properties.freeAccess ===  true && courtCost === 'all') {\r\n            isMatch = true;\r\n          }\r\n          \r\n          return isMatch === true;\r\n        });\r\n\r\n        newCourtsList.map(court => {\r\n          console.log(x.coords.latitude);\r\n          console.log(x.coords.longitude);          \r\n          console.log(court.distanceToUser = this.calculateDistance(\r\n            x.coords.latitude,\r\n            x.coords.longitude,\r\n            court.geometry.coordinates[0],\r\n            court.geometry.coordinates[1]\r\n            ));\r\n\r\n          return court\r\n        });\r\n\r\n        newCourtsList = newCourtsList.filter(court => {\r\n          let withinRange = false;\r\n\r\n          if(court.distanceToUser <= courtDistance){\r\n            withinRange = true;\r\n          }\r\n\r\n          return withinRange === true;\r\n        });\r\n        // Sort courts with nearest first\r\n        newCourtsList.sort((courtA, courtB) => parseFloat(courtA.distanceToUser) - parseFloat(courtB.distanceToUser));\r\n        \r\n        console.log(\"Filtered list: \");\r\n        console.log(newCourtsList);\r\n\r\n        // Limit to 10 results\r\n        if(newCourtsList.length > 10) {\r\n          newCourtsList = newCourtsList.slice(0,10);\r\n        }\r\n\r\n        this.props.filterCourts(newCourtsList);\r\n      })\r\n      .catch(error => console.error(error));\r\n    }, noLocation);\r\n    \r\n    \r\n\r\n    //console.log(courtCost);\r\n    //console.log(courtDistance);\r\n    //console.log(courts);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    localStorage.setItem('test', \"Data\");\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    //console.log(this.props);\r\n\r\n    return (\r\n          <div className={classes.root}>\r\n          <FormControl component=\"fieldset\" className={classes.formControl}>\r\n            <FormLabel component=\"legend\">Court Cost</FormLabel>\r\n            <RadioGroup\r\n              aria-label=\"Court Cost\"\r\n              name=\"Court Cost\"\r\n              className={classes.group}\r\n              value={this.props.courtCost}\r\n              onChange={this.handleChange}\r\n            >\r\n              <FormControlLabel value=\"free\" control={<Radio />} label=\"Free Courts\" />\r\n              <FormControlLabel value=\"premium\" control={<Radio />} label=\"Premium Courts\" />\r\n              <FormControlLabel value=\"all\" control={<Radio />} label=\"All\" />\r\n            </RadioGroup>\r\n            <TextField\r\n                select\r\n                \r\n                className={classes.padBottom}\r\n                variant=\"outlined\"\r\n                label=\"Distance\"\r\n                value={this.props.courtDistance}\r\n                onChange={this.handleDistanceChange('courtDistance')}\r\n                InputProps={{\r\n                startAdornment: <InputAdornment position=\"start\">Miles</InputAdornment>,\r\n                }}\r\n            >\r\n                {ranges.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </MenuItem>\r\n                ))}\r\n            </TextField>\r\n            <Button variant=\"contained\" color=\"primary\" fullWidth onClick={this.applyFilters}>\r\n                Apply Filters\r\n            </Button>\r\n          </FormControl>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      courtCost: state.formFilters.courtCost,\r\n      courtDistance: state.formFilters.courtDistance,\r\n      courts: state.courts.courts\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      updateFilters: (filterValues) => { dispatch({type: 'UPDATE_FILTERS', payload: filterValues}) },\r\n      addCourts: (courts) => { dispatch({type: 'ADD_COURTS', courts: courts })},\r\n      filterCourts: (filteredCourts) => {dispatch({type: 'FILTER_COURTS', payload: filteredCourts})},\r\n      setUserLocation: (location) => {dispatch({type: 'SET_USER_LOCATION', payload: location})}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Filters));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass SimpleSnackbar extends React.Component {\r\n  state = {\r\n    open: false,\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  addToFavourites = (courtToAdd) => {\r\n    let favouriteCourts = [];\r\n    if(localStorage.getItem('favouriteCourts')){\r\n      favouriteCourts = JSON.parse(localStorage.getItem('favouriteCourts'));\r\n      console.log(localStorage.getItem('favouriteCourts'));\r\n      // Remove old list\r\n      //localStorage.removeItem('favouriteCourts');\r\n    }\r\n  \r\n    favouriteCourts.push(courtToAdd);\r\n  \r\n    let deDupedFavourites = favouriteCourts.filter((elem, index, self) => self.findIndex(\r\n      (courtX) => {return (courtX.properties.id === elem.properties.id && courtX.properties.id === elem.properties.id)}) === index)\r\n  \r\n    // Add updated favourite list\r\n    localStorage.setItem('favouriteCourts', JSON.stringify(deDupedFavourites));\r\n    console.log(localStorage.getItem('favouriteCourts'));\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => {this.addToFavourites(this.props.court); this.handleClick()}}>Favourite</Button>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{this.props.court.properties.name} added to favourites!</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              className={classes.close}\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSnackbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleSnackbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Snackbar\r\nimport Snackbar from './Snackbar.js';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\n// Store\r\nimport {connect} from 'react-redux';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n    margin: 'auto',\r\n    marginBottom: '10px'\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  panel: {\r\n    height: 175\r\n  }\r\n};\r\n\r\n// Now used in Snackbar component\r\n// Can remove\r\nlet addToFavourites = (courtToAdd) => {\r\n  let favouriteCourts = [];\r\n  if(localStorage.getItem('favouriteCourts')){\r\n    favouriteCourts = JSON.parse(localStorage.getItem('favouriteCourts'));\r\n    console.log(localStorage.getItem('favouriteCourts'));\r\n    // Remove old list\r\n    //localStorage.removeItem('favouriteCourts');\r\n  }\r\n\r\n  favouriteCourts.push(courtToAdd);\r\n\r\n  let deDupedFavourites = favouriteCourts.filter((elem, index, self) => self.findIndex(\r\n    (courtX) => {return (courtX.properties.id === elem.properties.id && courtX.properties.id === elem.properties.id)}) === index)\r\n\r\n  // Add updated favourite list\r\n  localStorage.setItem('favouriteCourts', JSON.stringify(deDupedFavourites));\r\n  console.log(localStorage.getItem('favouriteCourts'));\r\n}\r\n\r\nconst ResultsList = (props) => {\r\n  const { classes } = props;\r\n  let courts = props.filteredCourts;\r\n  // map over filteredCourts\r\n\r\n  console.log(props);\r\n\r\n  let courtsList;\r\n\r\n  if(courts.length < 1) {\r\n    courtsList = <Typography component=\"p\">Select 'Apply Filters' to find your nearest tennis courts.</Typography>;\r\n  } else {\r\n    courtsList = courts.map(court => {\r\n      console.log(props.setActiveCourt);\r\n      return (\r\n        <Grid item xs={12} sm={6} lg={3} key={court.properties.id}>\r\n          <Card className={classes.card}>\r\n            <CardActionArea>\r\n              <CardMedia\r\n                className={classes.media}\r\n                image={\"./images/courts/\"+ court.properties.id + \".jpg\"}\r\n                title=\"Court\"\r\n              />\r\n              <CardContent className={classes.panel}>\r\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                  {court.properties.name}\r\n                </Typography>\r\n                <Typography gutterBottom component=\"p\">\r\n                  {court.distanceToUser.toFixed(1)} miles away\r\n                </Typography>\r\n                <Typography gutterBottom component=\"p\">\r\n                  {court.properties.description.substring(0,150)}...\r\n                </Typography>\r\n                <Typography gutterBottom component=\"p\">\r\n                  Numbers of courts: {court.properties.numOfCourts}\r\n                </Typography>\r\n              </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\" component={Link} to='/map' onClick={() => {props.setActiveCourt(court) } }>\r\n                View on Map \r\n              </Button>\r\n              <Snackbar court={court}/>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n      )\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Grid \r\n      container\r\n      spacing={0}\r\n      direction=\"row\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      >\r\n      {courtsList}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nResultsList.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state.courts);\r\n  //console.log(state.courts.courts);\r\n\r\n    return {\r\n        courts: state.courts,\r\n        filteredCourts: state.courts.filteredCourts,\r\n        activeCourt: state.courts.activeCourt\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveCourt: (court) => { dispatch({type: 'SET_ACTIVE_COURT', court: court}) }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ResultsList));","import React, { Component } from 'react';\r\nimport ResultsList from './ResultsList';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass ResultsListContainer extends Component {\r\n  render() {\r\n    return (\r\n      <ResultsList />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      courts: state.courts,\r\n      activeCourt: state.activeCourt,\r\n      filteredCourts: state.courts.filteredCourts\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      setActiveCourt: (court) => { dispatch({type: 'SET_ACTIVE_COURT', court: court}) },\r\n      addCourts: (courts) => { dispatch({type: 'ADD_COURTS', payload: courts })}\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsListContainer);\r\n","import React, { Component, Fragment } from 'react';\r\nimport Filters from './Filters';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ResultsListContainer from './ResultsListContainer';\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <Grid item xs={12} >\r\n            <Filters />\r\n          </Grid>   \r\n        </Grid> \r\n        <Grid \r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\" \r\n        >\r\n          <ResultsListContainer/>\r\n        </Grid>\r\n      </Fragment>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","import React, { Component, Fragment } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { Icon } from '@material-ui/core';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n    clearBtn: {\r\n        position: 'absolute',\r\n        right: '-30px'\r\n    },\r\n    titleFavourites: {\r\n        marginTop: '10px'\r\n    }\r\n}\r\n\r\nclass Favourites extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            favouriteCourts: JSON.parse(localStorage.getItem('favouriteCourts'))\r\n        }\r\n    }\r\n\r\n\r\n    removeFavourite = (id) => {\r\n        //let favourites = JSON.parse(localStorage.getItem('favouriteCourts'));\r\n        let favourites = this.state.favouriteCourts;\r\n        let editedFavourites = favourites.filter((court) => {\r\n            return (court.properties.id !== id)\r\n        });\r\n        this.setState({favouriteCourts: editedFavourites});\r\n        localStorage.setItem('favouriteCourts',JSON.stringify(editedFavourites));\r\n    }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    let results;\r\n\r\n    //let favouriteCourts = JSON.parse(localStorage.getItem('favouriteCourts'));\r\n\r\n    let favouriteCourts = this.state.favouriteCourts;\r\n    \r\n    if (favouriteCourts != null) {\r\n        results = favouriteCourts.map(favourite => {\r\n            return (\r\n                    <ListItem key={favourite.properties.id}>\r\n                        \r\n                        <ListItemText\r\n                            primary={favourite.properties.name}\r\n                            secondary={\"No. of courts: \" + favourite.properties.numOfCourts}\r\n                        />\r\n                        <Button size=\"small\" color=\"primary\" component={Link} to='/map' onClick={() => {this.props.setActiveCourt(favourite) } }>\r\n                            View on Map \r\n                        </Button>\r\n                        <ListItemSecondaryAction className={classes.clearBtn}>\r\n                            <IconButton aria-label=\"Delete\" onClick={() => {this.removeFavourite(favourite.properties.id)}}>\r\n                                <ListItemIcon><Icon>clear</Icon></ListItemIcon>\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n            )\r\n        })\r\n    }\r\n    \r\n\r\n    return (\r\n      <Fragment>\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <Grid item xs={12} >\r\n            <Typography variant=\"h6\" className={classes.titleFavourites}>\r\n              Favourites\r\n            </Typography>\r\n          </Grid>   \r\n          <Grid item>\r\n            <List>\r\n                {results}\r\n            </List>\r\n          </Grid>\r\n        </Grid> \r\n      </Fragment>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        courts: state.courts,\r\n        filteredCourts: state.courts.filteredCourts,\r\n        activeCourt: state.courts.activeCourt\r\n    }\r\n  }\r\n  \r\n  Favourites.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveCourt: (court) => { dispatch({type: 'SET_ACTIVE_COURT', court: court}) }\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Favourites));","import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Map from './Map';\r\nimport Search from './Search';\r\n\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Favourites from './Favourites';\r\n// import teal from '@material-ui/core/colors/teal';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#006064' },\r\n    secondary: { main: '#43a047' },\r\n  },\r\n  typography: { useNextVariants: true },\r\n});\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showCourtDetails: false,\r\n\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    \r\n  }\r\n  render() {\r\n    \r\n    return (\r\n      <BrowserRouter>\r\n        <MuiThemeProvider theme={theme}>\r\n          <div className=\"App\">\r\n            <Nav />\r\n            <Route exact path='/' component={Search}/>\r\n            <Route\r\n              exact path='/map'\r\n              render={(props) => <Map />}\r\n            />\r\n            <Route exact path='/favourites' component={Favourites}/>\r\n          </div>\r\n        </MuiThemeProvider>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ActionTypes = {\r\n    GET_ACTIVE_COURT: 'GET_ACTIVE_COURT',\r\n    SET_ACTIVE_COURT: 'SET_ACTIVE_COURT',\r\n\r\n    ADD_COURTS: 'ADD_COURTS',\r\n    FILTER_COURTS: 'FILTER_COURTS',\r\n\r\n    UPDATE_FILTERS: 'UPDATE_FILTERS',\r\n\r\n    SET_USER_LOCATION: 'SET_USER_LOCATION'\r\n}\r\n\r\nexport default ActionTypes;","import ActionTypes from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    courts: [],\r\n    filteredCourts: [],\r\n    activeCourt: null,\r\n    userLocation: []\r\n}\r\n\r\nexport default function courts(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COURTS:\r\n        console.log(action);\r\n        return {\r\n          ...state,\r\n            courts: action.payload\r\n        }\r\n      case ActionTypes.FILTER_COURTS:\r\n        return {\r\n          ...state,\r\n          filteredCourts: action.payload\r\n        }\r\n        \r\n      case ActionTypes.SET_ACTIVE_COURT:\r\n\r\n        console.log(action);\r\n        console.log(action.court);\r\n        return {\r\n          ...state,\r\n          activeCourt: action.court\r\n        }\r\n      \r\n      case ActionTypes.SET_USER_LOCATION: \r\n\r\n        console.log(action.payload.coords.latitude);\r\n        console.log(action.payload.coords.longitude);\r\n        return {\r\n          ...state,\r\n          userLocation: [action.payload.coords.latitude, action.payload.coords.longitude]\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import ActionTypes from '../constants/ActionTypes';\r\n\r\nconst initialState = {\r\n    courtCost: 'free',\r\n    courtDistance: 1000\r\n}\r\n\r\nexport default function courts(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ActionTypes.UPDATE_FILTERS:\r\n        //console.log(action.payload);\r\n        return {\r\n          ...state,\r\n          ...action.payload\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { combineReducers } from 'redux';\r\nimport courts from './courts';\r\nimport formFilters from './formFilters';\r\n\r\nconst rootReducer = combineReducers({\r\n    courts,\r\n    formFilters\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\n// Thunk\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}